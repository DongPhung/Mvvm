namespace ZBase.Foundation.Mvvm.ViewBinding
{
    /// <summary>
    /// Any class implements this interface will be an eligible
    /// candidate to have its details generated by the corresponding generator.
    /// </summary>
    /// <seealso cref="BindingAttribute"/>
    public interface IBinder
    {
        IDataContext DataContext { get; }

        /// <summary>
        /// Sets the property name to a binding field.
        /// </summary>
        /// <param name="bindingField">The binding field whose <see cref="BindingField.PropertyName"/> will be set.</param>
        /// <param name="propertyName">
        /// The property whose container class is an <see cref="ZBase.Foundation.Mvvm.ComponentModel.IObservableObject"/>.
        /// <br/>
        /// See <see cref="ZBase.Foundation.Mvvm.ViewBinding.BindingField.PropertyName"/>
        /// </param>
        bool SetPropertyName(string bindingField, string propertyName);

        /// <summary>
        /// Start receiving events from the <see cref="DataContext"/>.
        /// </summary>
        void StartBinding();

        /// <summary>
        /// Stop receiving any event from the <see cref="DataContext"/>.
        /// </summary>
        void StopBinding();
    }
}
