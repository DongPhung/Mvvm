






///*************************************************///
///                                                 ///
/// This file is auto-generated by T4 Text Template ///
///           DO NOT manually modify it!            ///
///                                                 ///
///*************************************************///

using System;
using ZBase.Foundation.Mvvm.Unions;

namespace ZBase.Foundation.Mvvm.ViewBinding.Adapters
{

    [Serializable]
    [Label("Byte ⇒ Float", "Default")]
    [Adapter(fromType: typeof(byte), toType: typeof(float), order: 0)]
    public sealed class ByteToFloatAdapter : IAdapter
    {
        public Union Convert(in Union union)
        {
            if (union.TryGetValue(out byte result))
            {
                return (float)result;
            }

            return union;
        }
    }

    [Serializable]
    [Label("SByte ⇒ Float", "Default")]
    [Adapter(fromType: typeof(sbyte), toType: typeof(float), order: 0)]
    public sealed class SByteToFloatAdapter : IAdapter
    {
        public Union Convert(in Union union)
        {
            if (union.TryGetValue(out sbyte result))
            {
                return (float)result;
            }

            return union;
        }
    }

    [Serializable]
    [Label("Char ⇒ Float", "Default")]
    [Adapter(fromType: typeof(char), toType: typeof(float), order: 0)]
    public sealed class CharToFloatAdapter : IAdapter
    {
        public Union Convert(in Union union)
        {
            if (union.TryGetValue(out char result))
            {
                return (float)result;
            }

            return union;
        }
    }

    [Serializable]
    [Label("Double ⇒ Float", "Default")]
    [Adapter(fromType: typeof(double), toType: typeof(float), order: 0)]
    public sealed class DoubleToFloatAdapter : IAdapter
    {
        public Union Convert(in Union union)
        {
            if (union.TryGetValue(out double result))
            {
                return (float)result;
            }

            return union;
        }
    }

    [Serializable]
    [Label("Float ⇒ Float", "Default")]
    [Adapter(fromType: typeof(float), toType: typeof(float), order: 0)]
    public sealed class FloatToFloatAdapter : IAdapter
    {
        public Union Convert(in Union union)
        {
            if (union.TryGetValue(out float result))
            {
                return (float)result;
            }

            return union;
        }
    }

    [Serializable]
    [Label("Int ⇒ Float", "Default")]
    [Adapter(fromType: typeof(int), toType: typeof(float), order: 0)]
    public sealed class IntToFloatAdapter : IAdapter
    {
        public Union Convert(in Union union)
        {
            if (union.TryGetValue(out int result))
            {
                return (float)result;
            }

            return union;
        }
    }

    [Serializable]
    [Label("UInt ⇒ Float", "Default")]
    [Adapter(fromType: typeof(uint), toType: typeof(float), order: 0)]
    public sealed class UIntToFloatAdapter : IAdapter
    {
        public Union Convert(in Union union)
        {
            if (union.TryGetValue(out uint result))
            {
                return (float)result;
            }

            return union;
        }
    }

    [Serializable]
    [Label("Long ⇒ Float", "Default")]
    [Adapter(fromType: typeof(long), toType: typeof(float), order: 0)]
    public sealed class LongToFloatAdapter : IAdapter
    {
        public Union Convert(in Union union)
        {
            if (union.TryGetValue(out long result))
            {
                return (float)result;
            }

            return union;
        }
    }

    [Serializable]
    [Label("ULong ⇒ Float", "Default")]
    [Adapter(fromType: typeof(ulong), toType: typeof(float), order: 0)]
    public sealed class ULongToFloatAdapter : IAdapter
    {
        public Union Convert(in Union union)
        {
            if (union.TryGetValue(out ulong result))
            {
                return (float)result;
            }

            return union;
        }
    }

    [Serializable]
    [Label("Short ⇒ Float", "Default")]
    [Adapter(fromType: typeof(short), toType: typeof(float), order: 0)]
    public sealed class ShortToFloatAdapter : IAdapter
    {
        public Union Convert(in Union union)
        {
            if (union.TryGetValue(out short result))
            {
                return (float)result;
            }

            return union;
        }
    }

    [Serializable]
    [Label("UShort ⇒ Float", "Default")]
    [Adapter(fromType: typeof(ushort), toType: typeof(float), order: 0)]
    public sealed class UShortToFloatAdapter : IAdapter
    {
        public Union Convert(in Union union)
        {
            if (union.TryGetValue(out ushort result))
            {
                return (float)result;
            }

            return union;
        }
    }

}
