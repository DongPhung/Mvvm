






///*************************************************///
///                                                 ///
/// This file is auto-generated by T4 Text Template ///
///           DO NOT manually modify it!            ///
///                                                 ///
///*************************************************///

using ZBase.Foundation.Mvvm.Unions;

namespace ZBase.Foundation.Mvvm.ViewBinding.Adapters
{

    [Label("Bool => String")]
    public sealed class BoolToStringAdapter : IAdapter
    {
        public Union Convert(in Union union)
        {
            if (union.TypeKind == UnionTypeKind.Bool)
            {
                return union.Bool.ToString();
            }

            return union;
        }
    }

    [Label("Byte => String")]
    public sealed class ByteToStringAdapter : IAdapter
    {
        public Union Convert(in Union union)
        {
            if (union.TypeKind == UnionTypeKind.Byte)
            {
                return union.Byte.ToString();
            }

            return union;
        }
    }

    [Label("SByte => String")]
    public sealed class SByteToStringAdapter : IAdapter
    {
        public Union Convert(in Union union)
        {
            if (union.TypeKind == UnionTypeKind.SByte)
            {
                return union.SByte.ToString();
            }

            return union;
        }
    }

    [Label("Char => String")]
    public sealed class CharToStringAdapter : IAdapter
    {
        public Union Convert(in Union union)
        {
            if (union.TypeKind == UnionTypeKind.Char)
            {
                return union.Char.ToString();
            }

            return union;
        }
    }

    [Label("Double => String")]
    public sealed class DoubleToStringAdapter : IAdapter
    {
        public Union Convert(in Union union)
        {
            if (union.TypeKind == UnionTypeKind.Double)
            {
                return union.Double.ToString();
            }

            return union;
        }
    }

    [Label("Float => String")]
    public sealed class FloatToStringAdapter : IAdapter
    {
        public Union Convert(in Union union)
        {
            if (union.TypeKind == UnionTypeKind.Float)
            {
                return union.Float.ToString();
            }

            return union;
        }
    }

    [Label("Int => String")]
    public sealed class IntToStringAdapter : IAdapter
    {
        public Union Convert(in Union union)
        {
            if (union.TypeKind == UnionTypeKind.Int)
            {
                return union.Int.ToString();
            }

            return union;
        }
    }

    [Label("UInt => String")]
    public sealed class UIntToStringAdapter : IAdapter
    {
        public Union Convert(in Union union)
        {
            if (union.TypeKind == UnionTypeKind.UInt)
            {
                return union.UInt.ToString();
            }

            return union;
        }
    }

    [Label("Long => String")]
    public sealed class LongToStringAdapter : IAdapter
    {
        public Union Convert(in Union union)
        {
            if (union.TypeKind == UnionTypeKind.Long)
            {
                return union.Long.ToString();
            }

            return union;
        }
    }

    [Label("ULong => String")]
    public sealed class ULongToStringAdapter : IAdapter
    {
        public Union Convert(in Union union)
        {
            if (union.TypeKind == UnionTypeKind.ULong)
            {
                return union.ULong.ToString();
            }

            return union;
        }
    }

    [Label("Short => String")]
    public sealed class ShortToStringAdapter : IAdapter
    {
        public Union Convert(in Union union)
        {
            if (union.TypeKind == UnionTypeKind.Short)
            {
                return union.Short.ToString();
            }

            return union;
        }
    }

    [Label("UShort => String")]
    public sealed class UShortToStringAdapter : IAdapter
    {
        public Union Convert(in Union union)
        {
            if (union.TypeKind == UnionTypeKind.UShort)
            {
                return union.UShort.ToString();
            }

            return union;
        }
    }

}
